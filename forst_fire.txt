ar=[]
n=0
br=[(-1,0),(+1,0),(0,+1),(0,-1),(-1,+1),(-1,-1),(+1,+1),(+1,-1)]
def bfs(i,j):
    key=(i,j)
    vis=set()
    vis.add(key)
    dis=dict()
    dis[key]=1 
    que=[]
    que.append((i,j))
    time=1
    while(que):
        x,y=que.pop(0)
        for dx,dy in br:
            
            nx,ny=x+dx,y+dy
            key=(nx,ny)
            print(key)
            if (0<=nx<=n-1 and 0<=ny<=m-1 and key not in vis and ar[nx][ny]=='T'):
                vis.add(key)
                dis[key]=dis[(x,y)]+1
                print("dis-:",dis)
                print("key-:",key)
                print("que-:",que)
                print("vis-:",vis)
                que.append((nx,ny))
                time=max(time,dis[key])
    return time
                
n,m=map(int,input().split(" "))
r,c=map(int,input().split(" "))
ar=[]
for i in range(n):
    ar.append(tuple(map(str,input().split(" "))))
    
print(bfs(r-1,c-1))